parameters:
  buildConfig: ''
  archType: ''
  osGroup: ''
  priority: 0
  crossgen: false
  scenarios: ''
  name: ''
  displayName: ''

### Test job

### Each test job depends on a corresponding testbuild job with the same
### buildConfig and archType.

jobs:
- template: xplat-job.yml
  parameters:
    buildConfig: ${{ parameters.buildConfig }}
    archType: ${{ parameters.archType }}
    osGroup: ${{ parameters.osGroup }}

    # Compute job name from template parameters
    ${{ if eq(parameters.crossgen, 'false') }}:
      name: ${{ format('test_{0}_{1}_{2}_{3}', parameters.name, parameters.osGroup, parameters.archType, parameters.buildConfig) }}
      displayName: ${{ format('Test {0} {1} {2} {3}', parameters.displayName, parameters.osGroup, parameters.archType, parameters.buildConfig) }}
    ${{ if eq(parameters.crossgen, 'true') }}:
      name: ${{ format('test_r2r_{0}_{1}_{2}_{3}', parameters.name, parameters.osGroup, parameters.archType, parameters.buildConfig) }}
      displayName: ${{ format('Test R2R {0} {1} {2} {3}', parameters.displayName, parameters.osGroup, parameters.archType, parameters.buildConfig) }}

    variables:
      # Map template parameters to command line arguments
      ${{ if eq(parameters.priority, '1') }}:
        ${{ if or(eq(parameters.osGroup, 'Linux'), eq(parameters.osGroup, 'OSX')) }}:
          priorityArg: 'priority1'
        ${{ if eq(parameters.osGroup, 'Windows_NT') }}:
          priorityArg: '-priority=1'
      ${{ if eq(parameters.priority, '0') }}:
        priorityArg: ''

      ${{ if eq(parameters.crossgen, 'true') }}:
        crossgenArg: 'crossgen'
      ${{ if eq(parameters.crossgen, 'false') }}:
        crossgenArg: ''
      ${{ if ne(parameters.scenarios, '') }}:
        scenariosArg: ${{ format('/p:Scenarios=\"{0}\"', parameters.scenarios) }}
      ${{ if eq(parameters.scenarios, '') }}:
        scenariosArg: ''

    # # Test job depends on the corresponding testbuild job
    # dependsOn:

    steps:
      - script: echo ${{ parameters.displayName }}
        displayName: Test step